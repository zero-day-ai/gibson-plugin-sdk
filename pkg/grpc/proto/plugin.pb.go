// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.1
// source: pkg/grpc/proto/plugin.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SecurityDomain enumeration
type SecurityDomain int32

const (
	SecurityDomain_DOMAIN_UNSPECIFIED    SecurityDomain = 0
	SecurityDomain_DOMAIN_MODEL          SecurityDomain = 1
	SecurityDomain_DOMAIN_DATA           SecurityDomain = 2
	SecurityDomain_DOMAIN_INTERFACE      SecurityDomain = 3
	SecurityDomain_DOMAIN_INFRASTRUCTURE SecurityDomain = 4
	SecurityDomain_DOMAIN_OUTPUT         SecurityDomain = 5
	SecurityDomain_DOMAIN_PROCESS        SecurityDomain = 6
)

// Enum value maps for SecurityDomain.
var (
	SecurityDomain_name = map[int32]string{
		0: "DOMAIN_UNSPECIFIED",
		1: "DOMAIN_MODEL",
		2: "DOMAIN_DATA",
		3: "DOMAIN_INTERFACE",
		4: "DOMAIN_INFRASTRUCTURE",
		5: "DOMAIN_OUTPUT",
		6: "DOMAIN_PROCESS",
	}
	SecurityDomain_value = map[string]int32{
		"DOMAIN_UNSPECIFIED":    0,
		"DOMAIN_MODEL":          1,
		"DOMAIN_DATA":           2,
		"DOMAIN_INTERFACE":      3,
		"DOMAIN_INFRASTRUCTURE": 4,
		"DOMAIN_OUTPUT":         5,
		"DOMAIN_PROCESS":        6,
	}
)

func (x SecurityDomain) Enum() *SecurityDomain {
	p := new(SecurityDomain)
	*p = x
	return p
}

func (x SecurityDomain) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityDomain) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_grpc_proto_plugin_proto_enumTypes[0].Descriptor()
}

func (SecurityDomain) Type() protoreflect.EnumType {
	return &file_pkg_grpc_proto_plugin_proto_enumTypes[0]
}

func (x SecurityDomain) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityDomain.Descriptor instead.
func (SecurityDomain) EnumDescriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{0}
}

// PayloadType enumeration
type PayloadType int32

const (
	PayloadType_PAYLOAD_TYPE_UNSPECIFIED PayloadType = 0
	PayloadType_PAYLOAD_TYPE_PROMPT      PayloadType = 1
	PayloadType_PAYLOAD_TYPE_QUERY       PayloadType = 2
	PayloadType_PAYLOAD_TYPE_INPUT       PayloadType = 3
	PayloadType_PAYLOAD_TYPE_CODE        PayloadType = 4
	PayloadType_PAYLOAD_TYPE_DATA        PayloadType = 5
	PayloadType_PAYLOAD_TYPE_SCRIPT      PayloadType = 6
)

// Enum value maps for PayloadType.
var (
	PayloadType_name = map[int32]string{
		0: "PAYLOAD_TYPE_UNSPECIFIED",
		1: "PAYLOAD_TYPE_PROMPT",
		2: "PAYLOAD_TYPE_QUERY",
		3: "PAYLOAD_TYPE_INPUT",
		4: "PAYLOAD_TYPE_CODE",
		5: "PAYLOAD_TYPE_DATA",
		6: "PAYLOAD_TYPE_SCRIPT",
	}
	PayloadType_value = map[string]int32{
		"PAYLOAD_TYPE_UNSPECIFIED": 0,
		"PAYLOAD_TYPE_PROMPT":      1,
		"PAYLOAD_TYPE_QUERY":       2,
		"PAYLOAD_TYPE_INPUT":       3,
		"PAYLOAD_TYPE_CODE":        4,
		"PAYLOAD_TYPE_DATA":        5,
		"PAYLOAD_TYPE_SCRIPT":      6,
	}
)

func (x PayloadType) Enum() *PayloadType {
	p := new(PayloadType)
	*p = x
	return p
}

func (x PayloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_grpc_proto_plugin_proto_enumTypes[1].Descriptor()
}

func (PayloadType) Type() protoreflect.EnumType {
	return &file_pkg_grpc_proto_plugin_proto_enumTypes[1]
}

func (x PayloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayloadType.Descriptor instead.
func (PayloadType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{1}
}

// SeverityLevel enumeration
type SeverityLevel int32

const (
	SeverityLevel_SEVERITY_UNSPECIFIED SeverityLevel = 0
	SeverityLevel_SEVERITY_INFO        SeverityLevel = 1
	SeverityLevel_SEVERITY_LOW         SeverityLevel = 2
	SeverityLevel_SEVERITY_MEDIUM      SeverityLevel = 3
	SeverityLevel_SEVERITY_HIGH        SeverityLevel = 4
	SeverityLevel_SEVERITY_CRITICAL    SeverityLevel = 5
)

// Enum value maps for SeverityLevel.
var (
	SeverityLevel_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "SEVERITY_INFO",
		2: "SEVERITY_LOW",
		3: "SEVERITY_MEDIUM",
		4: "SEVERITY_HIGH",
		5: "SEVERITY_CRITICAL",
	}
	SeverityLevel_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_INFO":        1,
		"SEVERITY_LOW":         2,
		"SEVERITY_MEDIUM":      3,
		"SEVERITY_HIGH":        4,
		"SEVERITY_CRITICAL":    5,
	}
)

func (x SeverityLevel) Enum() *SeverityLevel {
	p := new(SeverityLevel)
	*p = x
	return p
}

func (x SeverityLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeverityLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_grpc_proto_plugin_proto_enumTypes[2].Descriptor()
}

func (SeverityLevel) Type() protoreflect.EnumType {
	return &file_pkg_grpc_proto_plugin_proto_enumTypes[2]
}

func (x SeverityLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeverityLevel.Descriptor instead.
func (SeverityLevel) EnumDescriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{2}
}

// HealthStatus enumeration
type HealthStatus int32

const (
	HealthStatus_HEALTH_STATUS_UNKNOWN         HealthStatus = 0
	HealthStatus_HEALTH_STATUS_SERVING         HealthStatus = 1
	HealthStatus_HEALTH_STATUS_NOT_SERVING     HealthStatus = 2
	HealthStatus_HEALTH_STATUS_SERVICE_UNKNOWN HealthStatus = 3
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "HEALTH_STATUS_UNKNOWN",
		1: "HEALTH_STATUS_SERVING",
		2: "HEALTH_STATUS_NOT_SERVING",
		3: "HEALTH_STATUS_SERVICE_UNKNOWN",
	}
	HealthStatus_value = map[string]int32{
		"HEALTH_STATUS_UNKNOWN":         0,
		"HEALTH_STATUS_SERVING":         1,
		"HEALTH_STATUS_NOT_SERVING":     2,
		"HEALTH_STATUS_SERVICE_UNKNOWN": 3,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_grpc_proto_plugin_proto_enumTypes[3].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_pkg_grpc_proto_plugin_proto_enumTypes[3]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus.Descriptor instead.
func (HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{3}
}

// GetInfoRequest for plugin metadata
type GetInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInfoRequest) Reset() {
	*x = GetInfoRequest{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRequest) ProtoMessage() {}

func (x *GetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRequest.ProtoReflect.Descriptor instead.
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{0}
}

// GetInfoResponse containing plugin information
type GetInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *PluginInfo            `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInfoResponse) Reset() {
	*x = GetInfoResponse{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoResponse) ProtoMessage() {}

func (x *GetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoResponse.ProtoReflect.Descriptor instead.
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *GetInfoResponse) GetInfo() *PluginInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// PluginInfo contains plugin metadata
type PluginInfo struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Name                  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version               string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Description           string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Author                string                 `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Domain                SecurityDomain         `protobuf:"varint,5,opt,name=domain,proto3,enum=gibson.plugin.v1.SecurityDomain" json:"domain,omitempty"`
	SupportedPayloadTypes []string               `protobuf:"bytes,6,rep,name=supported_payload_types,json=supportedPayloadTypes,proto3" json:"supported_payload_types,omitempty"`
	Capabilities          *PluginCapabilities    `protobuf:"bytes,7,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	Metadata              map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PluginInfo) Reset() {
	*x = PluginInfo{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfo) ProtoMessage() {}

func (x *PluginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfo.ProtoReflect.Descriptor instead.
func (*PluginInfo) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *PluginInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PluginInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PluginInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *PluginInfo) GetDomain() SecurityDomain {
	if x != nil {
		return x.Domain
	}
	return SecurityDomain_DOMAIN_UNSPECIFIED
}

func (x *PluginInfo) GetSupportedPayloadTypes() []string {
	if x != nil {
		return x.SupportedPayloadTypes
	}
	return nil
}

func (x *PluginInfo) GetCapabilities() *PluginCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *PluginInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PluginInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PluginInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// PluginCapabilities defines what the plugin can do
type PluginCapabilities struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	SupportsStreaming     bool                   `protobuf:"varint,1,opt,name=supports_streaming,json=supportsStreaming,proto3" json:"supports_streaming,omitempty"`
	SupportsBatch         bool                   `protobuf:"varint,2,opt,name=supports_batch,json=supportsBatch,proto3" json:"supports_batch,omitempty"`
	SupportsConcurrent    bool                   `protobuf:"varint,3,opt,name=supports_concurrent,json=supportsConcurrent,proto3" json:"supports_concurrent,omitempty"`
	MaxConcurrentRequests int32                  `protobuf:"varint,4,opt,name=max_concurrent_requests,json=maxConcurrentRequests,proto3" json:"max_concurrent_requests,omitempty"`
	TimeoutSeconds        int32                  `protobuf:"varint,5,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	RequiredPermissions   []string               `protobuf:"bytes,6,rep,name=required_permissions,json=requiredPermissions,proto3" json:"required_permissions,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PluginCapabilities) Reset() {
	*x = PluginCapabilities{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCapabilities) ProtoMessage() {}

func (x *PluginCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCapabilities.ProtoReflect.Descriptor instead.
func (*PluginCapabilities) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *PluginCapabilities) GetSupportsStreaming() bool {
	if x != nil {
		return x.SupportsStreaming
	}
	return false
}

func (x *PluginCapabilities) GetSupportsBatch() bool {
	if x != nil {
		return x.SupportsBatch
	}
	return false
}

func (x *PluginCapabilities) GetSupportsConcurrent() bool {
	if x != nil {
		return x.SupportsConcurrent
	}
	return false
}

func (x *PluginCapabilities) GetMaxConcurrentRequests() int32 {
	if x != nil {
		return x.MaxConcurrentRequests
	}
	return 0
}

func (x *PluginCapabilities) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *PluginCapabilities) GetRequiredPermissions() []string {
	if x != nil {
		return x.RequiredPermissions
	}
	return nil
}

// AssessRequest for security assessment
type AssessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Target        *Target                `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Config        *AssessmentConfig      `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	Context       map[string]string      `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssessRequest) Reset() {
	*x = AssessRequest{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssessRequest) ProtoMessage() {}

func (x *AssessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssessRequest.ProtoReflect.Descriptor instead.
func (*AssessRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *AssessRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AssessRequest) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *AssessRequest) GetConfig() *AssessmentConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *AssessRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *AssessRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Target represents the assessment target
type Target struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Endpoint      string                 `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Configuration map[string]string      `protobuf:"bytes,5,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Credentials   *Credentials           `protobuf:"bytes,6,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Tags          []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *Target) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Target) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Target) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Target) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Target) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *Target) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *Target) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Target) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Credentials for target access
type Credentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data          map[string]string      `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Encrypted     bool                   `protobuf:"varint,3,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *Credentials) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Credentials) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Credentials) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

// AssessmentConfig defines assessment parameters
type AssessmentConfig struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Domain              SecurityDomain         `protobuf:"varint,1,opt,name=domain,proto3,enum=gibson.plugin.v1.SecurityDomain" json:"domain,omitempty"`
	PayloadTypes        []PayloadType          `protobuf:"varint,2,rep,packed,name=payload_types,json=payloadTypes,proto3,enum=gibson.plugin.v1.PayloadType" json:"payload_types,omitempty"`
	MaxFindings         int32                  `protobuf:"varint,3,opt,name=max_findings,json=maxFindings,proto3" json:"max_findings,omitempty"`
	TimeoutSeconds      int32                  `protobuf:"varint,4,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	Options             map[string]*anypb.Any  `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	EnableStreaming     bool                   `protobuf:"varint,6,opt,name=enable_streaming,json=enableStreaming,proto3" json:"enable_streaming,omitempty"`
	ConcurrentExecution bool                   `protobuf:"varint,7,opt,name=concurrent_execution,json=concurrentExecution,proto3" json:"concurrent_execution,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AssessmentConfig) Reset() {
	*x = AssessmentConfig{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssessmentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssessmentConfig) ProtoMessage() {}

func (x *AssessmentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssessmentConfig.ProtoReflect.Descriptor instead.
func (*AssessmentConfig) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *AssessmentConfig) GetDomain() SecurityDomain {
	if x != nil {
		return x.Domain
	}
	return SecurityDomain_DOMAIN_UNSPECIFIED
}

func (x *AssessmentConfig) GetPayloadTypes() []PayloadType {
	if x != nil {
		return x.PayloadTypes
	}
	return nil
}

func (x *AssessmentConfig) GetMaxFindings() int32 {
	if x != nil {
		return x.MaxFindings
	}
	return 0
}

func (x *AssessmentConfig) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *AssessmentConfig) GetOptions() map[string]*anypb.Any {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *AssessmentConfig) GetEnableStreaming() bool {
	if x != nil {
		return x.EnableStreaming
	}
	return false
}

func (x *AssessmentConfig) GetConcurrentExecution() bool {
	if x != nil {
		return x.ConcurrentExecution
	}
	return false
}

// AssessResponse containing assessment results
type AssessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Findings      []*Finding             `protobuf:"bytes,4,rep,name=findings,proto3" json:"findings,omitempty"`
	Metadata      *AssessmentMetadata    `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssessResponse) Reset() {
	*x = AssessResponse{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssessResponse) ProtoMessage() {}

func (x *AssessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssessResponse.ProtoReflect.Descriptor instead.
func (*AssessResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *AssessResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AssessResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AssessResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *AssessResponse) GetFindings() []*Finding {
	if x != nil {
		return x.Findings
	}
	return nil
}

func (x *AssessResponse) GetMetadata() *AssessmentMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AssessResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Finding represents a security finding
type Finding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Severity      SeverityLevel          `protobuf:"varint,4,opt,name=severity,proto3,enum=gibson.plugin.v1.SeverityLevel" json:"severity,omitempty"`
	Domain        SecurityDomain         `protobuf:"varint,5,opt,name=domain,proto3,enum=gibson.plugin.v1.SecurityDomain" json:"domain,omitempty"`
	PayloadType   PayloadType            `protobuf:"varint,6,opt,name=payload_type,json=payloadType,proto3,enum=gibson.plugin.v1.PayloadType" json:"payload_type,omitempty"`
	Payload       string                 `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
	Location      string                 `protobuf:"bytes,8,opt,name=location,proto3" json:"location,omitempty"`
	Evidence      *Evidence              `protobuf:"bytes,9,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Remediation   *Remediation           `protobuf:"bytes,10,opt,name=remediation,proto3" json:"remediation,omitempty"`
	Tags          []string               `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DiscoveredAt  *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=discovered_at,json=discoveredAt,proto3" json:"discovered_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Finding) Reset() {
	*x = Finding{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding) ProtoMessage() {}

func (x *Finding) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding.ProtoReflect.Descriptor instead.
func (*Finding) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{9}
}

func (x *Finding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Finding) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Finding) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Finding) GetSeverity() SeverityLevel {
	if x != nil {
		return x.Severity
	}
	return SeverityLevel_SEVERITY_UNSPECIFIED
}

func (x *Finding) GetDomain() SecurityDomain {
	if x != nil {
		return x.Domain
	}
	return SecurityDomain_DOMAIN_UNSPECIFIED
}

func (x *Finding) GetPayloadType() PayloadType {
	if x != nil {
		return x.PayloadType
	}
	return PayloadType_PAYLOAD_TYPE_UNSPECIFIED
}

func (x *Finding) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Finding) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Finding) GetEvidence() *Evidence {
	if x != nil {
		return x.Evidence
	}
	return nil
}

func (x *Finding) GetRemediation() *Remediation {
	if x != nil {
		return x.Remediation
	}
	return nil
}

func (x *Finding) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Finding) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Finding) GetDiscoveredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DiscoveredAt
	}
	return nil
}

// Evidence supporting the finding
type Evidence struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Attachments   []string               `protobuf:"bytes,3,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Context       map[string]string      `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Evidence) Reset() {
	*x = Evidence{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evidence) ProtoMessage() {}

func (x *Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evidence.ProtoReflect.Descriptor instead.
func (*Evidence) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{10}
}

func (x *Evidence) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Evidence) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Evidence) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Evidence) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

// Remediation information
type Remediation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Steps         []string               `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	Priority      string                 `protobuf:"bytes,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Effort        string                 `protobuf:"bytes,4,opt,name=effort,proto3" json:"effort,omitempty"`
	References    []string               `protobuf:"bytes,5,rep,name=references,proto3" json:"references,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Remediation) Reset() {
	*x = Remediation{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Remediation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Remediation) ProtoMessage() {}

func (x *Remediation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Remediation.ProtoReflect.Descriptor instead.
func (*Remediation) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{11}
}

func (x *Remediation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Remediation) GetSteps() []string {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *Remediation) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *Remediation) GetEffort() string {
	if x != nil {
		return x.Effort
	}
	return ""
}

func (x *Remediation) GetReferences() []string {
	if x != nil {
		return x.References
	}
	return nil
}

// AssessmentMetadata contains execution metadata
type AssessmentMetadata struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	StartedAt          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	DurationMs         int64                  `protobuf:"varint,3,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	PayloadsTested     int32                  `protobuf:"varint,4,opt,name=payloads_tested,json=payloadsTested,proto3" json:"payloads_tested,omitempty"`
	FindingsCount      int32                  `protobuf:"varint,5,opt,name=findings_count,json=findingsCount,proto3" json:"findings_count,omitempty"`
	PluginVersion      string                 `protobuf:"bytes,6,opt,name=plugin_version,json=pluginVersion,proto3" json:"plugin_version,omitempty"`
	PerformanceMetrics map[string]string      `protobuf:"bytes,7,rep,name=performance_metrics,json=performanceMetrics,proto3" json:"performance_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AssessmentMetadata) Reset() {
	*x = AssessmentMetadata{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssessmentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssessmentMetadata) ProtoMessage() {}

func (x *AssessmentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssessmentMetadata.ProtoReflect.Descriptor instead.
func (*AssessmentMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{12}
}

func (x *AssessmentMetadata) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *AssessmentMetadata) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *AssessmentMetadata) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *AssessmentMetadata) GetPayloadsTested() int32 {
	if x != nil {
		return x.PayloadsTested
	}
	return 0
}

func (x *AssessmentMetadata) GetFindingsCount() int32 {
	if x != nil {
		return x.FindingsCount
	}
	return 0
}

func (x *AssessmentMetadata) GetPluginVersion() string {
	if x != nil {
		return x.PluginVersion
	}
	return ""
}

func (x *AssessmentMetadata) GetPerformanceMetrics() map[string]string {
	if x != nil {
		return x.PerformanceMetrics
	}
	return nil
}

// BatchAssessRequest for multiple assessments
type BatchAssessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchId       string                 `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Requests      []*AssessRequest       `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty"`
	Config        *BatchConfig           `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAssessRequest) Reset() {
	*x = BatchAssessRequest{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAssessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAssessRequest) ProtoMessage() {}

func (x *BatchAssessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAssessRequest.ProtoReflect.Descriptor instead.
func (*BatchAssessRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{13}
}

func (x *BatchAssessRequest) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *BatchAssessRequest) GetRequests() []*AssessRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *BatchAssessRequest) GetConfig() *BatchConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// BatchConfig for batch processing
type BatchConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MaxConcurrent  int32                  `protobuf:"varint,1,opt,name=max_concurrent,json=maxConcurrent,proto3" json:"max_concurrent,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,2,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	FailFast       bool                   `protobuf:"varint,3,opt,name=fail_fast,json=failFast,proto3" json:"fail_fast,omitempty"`
	CollectMetrics bool                   `protobuf:"varint,4,opt,name=collect_metrics,json=collectMetrics,proto3" json:"collect_metrics,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchConfig) Reset() {
	*x = BatchConfig{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchConfig) ProtoMessage() {}

func (x *BatchConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchConfig.ProtoReflect.Descriptor instead.
func (*BatchConfig) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{14}
}

func (x *BatchConfig) GetMaxConcurrent() int32 {
	if x != nil {
		return x.MaxConcurrent
	}
	return 0
}

func (x *BatchConfig) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *BatchConfig) GetFailFast() bool {
	if x != nil {
		return x.FailFast
	}
	return false
}

func (x *BatchConfig) GetCollectMetrics() bool {
	if x != nil {
		return x.CollectMetrics
	}
	return false
}

// BatchAssessResponse for batch results
type BatchAssessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchId       string                 `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Responses     []*AssessResponse      `protobuf:"bytes,2,rep,name=responses,proto3" json:"responses,omitempty"`
	Metadata      *BatchMetadata         `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAssessResponse) Reset() {
	*x = BatchAssessResponse{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAssessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAssessResponse) ProtoMessage() {}

func (x *BatchAssessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAssessResponse.ProtoReflect.Descriptor instead.
func (*BatchAssessResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{15}
}

func (x *BatchAssessResponse) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *BatchAssessResponse) GetResponses() []*AssessResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *BatchAssessResponse) GetMetadata() *BatchMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// BatchMetadata for batch execution
type BatchMetadata struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TotalRequests      int32                  `protobuf:"varint,1,opt,name=total_requests,json=totalRequests,proto3" json:"total_requests,omitempty"`
	SuccessfulRequests int32                  `protobuf:"varint,2,opt,name=successful_requests,json=successfulRequests,proto3" json:"successful_requests,omitempty"`
	FailedRequests     int32                  `protobuf:"varint,3,opt,name=failed_requests,json=failedRequests,proto3" json:"failed_requests,omitempty"`
	StartedAt          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	TotalDurationMs    int64                  `protobuf:"varint,6,opt,name=total_duration_ms,json=totalDurationMs,proto3" json:"total_duration_ms,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BatchMetadata) Reset() {
	*x = BatchMetadata{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchMetadata) ProtoMessage() {}

func (x *BatchMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchMetadata.ProtoReflect.Descriptor instead.
func (*BatchMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{16}
}

func (x *BatchMetadata) GetTotalRequests() int32 {
	if x != nil {
		return x.TotalRequests
	}
	return 0
}

func (x *BatchMetadata) GetSuccessfulRequests() int32 {
	if x != nil {
		return x.SuccessfulRequests
	}
	return 0
}

func (x *BatchMetadata) GetFailedRequests() int32 {
	if x != nil {
		return x.FailedRequests
	}
	return 0
}

func (x *BatchMetadata) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *BatchMetadata) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *BatchMetadata) GetTotalDurationMs() int64 {
	if x != nil {
		return x.TotalDurationMs
	}
	return 0
}

// HealthCheckRequest for plugin health
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{17}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// HealthCheckResponse for plugin health status
type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        HealthStatus           `protobuf:"varint,1,opt,name=status,proto3,enum=gibson.plugin.v1.HealthStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       map[string]string      `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_plugin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_plugin_proto_rawDescGZIP(), []int{18}
}

func (x *HealthCheckResponse) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_HEALTH_STATUS_UNKNOWN
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheckResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_pkg_grpc_proto_plugin_proto protoreflect.FileDescriptor

const file_pkg_grpc_proto_plugin_proto_rawDesc = "" +
	"\n" +
	"\x1bpkg/grpc/proto/plugin.proto\x12\x10gibson.plugin.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\"\x10\n" +
	"\x0eGetInfoRequest\"C\n" +
	"\x0fGetInfoResponse\x120\n" +
	"\x04info\x18\x01 \x01(\v2\x1c.gibson.plugin.v1.PluginInfoR\x04info\"\xab\x04\n" +
	"\n" +
	"PluginInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06author\x18\x04 \x01(\tR\x06author\x128\n" +
	"\x06domain\x18\x05 \x01(\x0e2 .gibson.plugin.v1.SecurityDomainR\x06domain\x126\n" +
	"\x17supported_payload_types\x18\x06 \x03(\tR\x15supportedPayloadTypes\x12H\n" +
	"\fcapabilities\x18\a \x01(\v2$.gibson.plugin.v1.PluginCapabilitiesR\fcapabilities\x12F\n" +
	"\bmetadata\x18\b \x03(\v2*.gibson.plugin.v1.PluginInfo.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaf\x02\n" +
	"\x12PluginCapabilities\x12-\n" +
	"\x12supports_streaming\x18\x01 \x01(\bR\x11supportsStreaming\x12%\n" +
	"\x0esupports_batch\x18\x02 \x01(\bR\rsupportsBatch\x12/\n" +
	"\x13supports_concurrent\x18\x03 \x01(\bR\x12supportsConcurrent\x126\n" +
	"\x17max_concurrent_requests\x18\x04 \x01(\x05R\x15maxConcurrentRequests\x12'\n" +
	"\x0ftimeout_seconds\x18\x05 \x01(\x05R\x0etimeoutSeconds\x121\n" +
	"\x14required_permissions\x18\x06 \x03(\tR\x13requiredPermissions\"\xda\x02\n" +
	"\rAssessRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x120\n" +
	"\x06target\x18\x02 \x01(\v2\x18.gibson.plugin.v1.TargetR\x06target\x12:\n" +
	"\x06config\x18\x03 \x01(\v2\".gibson.plugin.v1.AssessmentConfigR\x06config\x12F\n" +
	"\acontext\x18\x04 \x03(\v2,.gibson.plugin.v1.AssessRequest.ContextEntryR\acontext\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc7\x03\n" +
	"\x06Target\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1a\n" +
	"\bendpoint\x18\x04 \x01(\tR\bendpoint\x12Q\n" +
	"\rconfiguration\x18\x05 \x03(\v2+.gibson.plugin.v1.Target.ConfigurationEntryR\rconfiguration\x12?\n" +
	"\vcredentials\x18\x06 \x01(\v2\x1d.gibson.plugin.v1.CredentialsR\vcredentials\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12B\n" +
	"\bmetadata\x18\b \x03(\v2&.gibson.plugin.v1.Target.MetadataEntryR\bmetadata\x1a@\n" +
	"\x12ConfigurationEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb5\x01\n" +
	"\vCredentials\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12;\n" +
	"\x04data\x18\x02 \x03(\v2'.gibson.plugin.v1.Credentials.DataEntryR\x04data\x12\x1c\n" +
	"\tencrypted\x18\x03 \x01(\bR\tencrypted\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x03\n" +
	"\x10AssessmentConfig\x128\n" +
	"\x06domain\x18\x01 \x01(\x0e2 .gibson.plugin.v1.SecurityDomainR\x06domain\x12B\n" +
	"\rpayload_types\x18\x02 \x03(\x0e2\x1d.gibson.plugin.v1.PayloadTypeR\fpayloadTypes\x12!\n" +
	"\fmax_findings\x18\x03 \x01(\x05R\vmaxFindings\x12'\n" +
	"\x0ftimeout_seconds\x18\x04 \x01(\x05R\x0etimeoutSeconds\x12I\n" +
	"\aoptions\x18\x05 \x03(\v2/.gibson.plugin.v1.AssessmentConfig.OptionsEntryR\aoptions\x12)\n" +
	"\x10enable_streaming\x18\x06 \x01(\bR\x0fenableStreaming\x121\n" +
	"\x14concurrent_execution\x18\a \x01(\bR\x13concurrentExecution\x1aP\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x05value:\x028\x01\"\xa1\x02\n" +
	"\x0eAssessResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x125\n" +
	"\bfindings\x18\x04 \x03(\v2\x19.gibson.plugin.v1.FindingR\bfindings\x12@\n" +
	"\bmetadata\x18\x05 \x01(\v2$.gibson.plugin.v1.AssessmentMetadataR\bmetadata\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x90\x05\n" +
	"\aFinding\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12;\n" +
	"\bseverity\x18\x04 \x01(\x0e2\x1f.gibson.plugin.v1.SeverityLevelR\bseverity\x128\n" +
	"\x06domain\x18\x05 \x01(\x0e2 .gibson.plugin.v1.SecurityDomainR\x06domain\x12@\n" +
	"\fpayload_type\x18\x06 \x01(\x0e2\x1d.gibson.plugin.v1.PayloadTypeR\vpayloadType\x12\x18\n" +
	"\apayload\x18\a \x01(\tR\apayload\x12\x1a\n" +
	"\blocation\x18\b \x01(\tR\blocation\x126\n" +
	"\bevidence\x18\t \x01(\v2\x1a.gibson.plugin.v1.EvidenceR\bevidence\x12?\n" +
	"\vremediation\x18\n" +
	" \x01(\v2\x1d.gibson.plugin.v1.RemediationR\vremediation\x12\x12\n" +
	"\x04tags\x18\v \x03(\tR\x04tags\x12C\n" +
	"\bmetadata\x18\f \x03(\v2'.gibson.plugin.v1.Finding.MetadataEntryR\bmetadata\x12?\n" +
	"\rdiscovered_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\fdiscoveredAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd3\x01\n" +
	"\bEvidence\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04data\x18\x02 \x01(\tR\x04data\x12 \n" +
	"\vattachments\x18\x03 \x03(\tR\vattachments\x12A\n" +
	"\acontext\x18\x04 \x03(\v2'.gibson.plugin.v1.Evidence.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x99\x01\n" +
	"\vRemediation\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12\x14\n" +
	"\x05steps\x18\x02 \x03(\tR\x05steps\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\tR\bpriority\x12\x16\n" +
	"\x06effort\x18\x04 \x01(\tR\x06effort\x12\x1e\n" +
	"\n" +
	"references\x18\x05 \x03(\tR\n" +
	"references\"\xdc\x03\n" +
	"\x12AssessmentMetadata\x129\n" +
	"\n" +
	"started_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1f\n" +
	"\vduration_ms\x18\x03 \x01(\x03R\n" +
	"durationMs\x12'\n" +
	"\x0fpayloads_tested\x18\x04 \x01(\x05R\x0epayloadsTested\x12%\n" +
	"\x0efindings_count\x18\x05 \x01(\x05R\rfindingsCount\x12%\n" +
	"\x0eplugin_version\x18\x06 \x01(\tR\rpluginVersion\x12m\n" +
	"\x13performance_metrics\x18\a \x03(\v2<.gibson.plugin.v1.AssessmentMetadata.PerformanceMetricsEntryR\x12performanceMetrics\x1aE\n" +
	"\x17PerformanceMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa3\x01\n" +
	"\x12BatchAssessRequest\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12;\n" +
	"\brequests\x18\x02 \x03(\v2\x1f.gibson.plugin.v1.AssessRequestR\brequests\x125\n" +
	"\x06config\x18\x03 \x01(\v2\x1d.gibson.plugin.v1.BatchConfigR\x06config\"\xa3\x01\n" +
	"\vBatchConfig\x12%\n" +
	"\x0emax_concurrent\x18\x01 \x01(\x05R\rmaxConcurrent\x12'\n" +
	"\x0ftimeout_seconds\x18\x02 \x01(\x05R\x0etimeoutSeconds\x12\x1b\n" +
	"\tfail_fast\x18\x03 \x01(\bR\bfailFast\x12'\n" +
	"\x0fcollect_metrics\x18\x04 \x01(\bR\x0ecollectMetrics\"\xad\x01\n" +
	"\x13BatchAssessResponse\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12>\n" +
	"\tresponses\x18\x02 \x03(\v2 .gibson.plugin.v1.AssessResponseR\tresponses\x12;\n" +
	"\bmetadata\x18\x03 \x01(\v2\x1f.gibson.plugin.v1.BatchMetadataR\bmetadata\"\xb6\x02\n" +
	"\rBatchMetadata\x12%\n" +
	"\x0etotal_requests\x18\x01 \x01(\x05R\rtotalRequests\x12/\n" +
	"\x13successful_requests\x18\x02 \x01(\x05R\x12successfulRequests\x12'\n" +
	"\x0ffailed_requests\x18\x03 \x01(\x05R\x0efailedRequests\x129\n" +
	"\n" +
	"started_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12*\n" +
	"\x11total_duration_ms\x18\x06 \x01(\x03R\x0ftotalDurationMs\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\xf1\x01\n" +
	"\x13HealthCheckResponse\x126\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1e.gibson.plugin.v1.HealthStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12L\n" +
	"\adetails\x18\x03 \x03(\v22.gibson.plugin.v1.HealthCheckResponse.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xa3\x01\n" +
	"\x0eSecurityDomain\x12\x16\n" +
	"\x12DOMAIN_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fDOMAIN_MODEL\x10\x01\x12\x0f\n" +
	"\vDOMAIN_DATA\x10\x02\x12\x14\n" +
	"\x10DOMAIN_INTERFACE\x10\x03\x12\x19\n" +
	"\x15DOMAIN_INFRASTRUCTURE\x10\x04\x12\x11\n" +
	"\rDOMAIN_OUTPUT\x10\x05\x12\x12\n" +
	"\x0eDOMAIN_PROCESS\x10\x06*\xbb\x01\n" +
	"\vPayloadType\x12\x1c\n" +
	"\x18PAYLOAD_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13PAYLOAD_TYPE_PROMPT\x10\x01\x12\x16\n" +
	"\x12PAYLOAD_TYPE_QUERY\x10\x02\x12\x16\n" +
	"\x12PAYLOAD_TYPE_INPUT\x10\x03\x12\x15\n" +
	"\x11PAYLOAD_TYPE_CODE\x10\x04\x12\x15\n" +
	"\x11PAYLOAD_TYPE_DATA\x10\x05\x12\x17\n" +
	"\x13PAYLOAD_TYPE_SCRIPT\x10\x06*\x8d\x01\n" +
	"\rSeverityLevel\x12\x18\n" +
	"\x14SEVERITY_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rSEVERITY_INFO\x10\x01\x12\x10\n" +
	"\fSEVERITY_LOW\x10\x02\x12\x13\n" +
	"\x0fSEVERITY_MEDIUM\x10\x03\x12\x11\n" +
	"\rSEVERITY_HIGH\x10\x04\x12\x15\n" +
	"\x11SEVERITY_CRITICAL\x10\x05*\x86\x01\n" +
	"\fHealthStatus\x12\x19\n" +
	"\x15HEALTH_STATUS_UNKNOWN\x10\x00\x12\x19\n" +
	"\x15HEALTH_STATUS_SERVING\x10\x01\x12\x1d\n" +
	"\x19HEALTH_STATUS_NOT_SERVING\x10\x02\x12!\n" +
	"\x1dHEALTH_STATUS_SERVICE_UNKNOWN\x10\x032\xbb\x03\n" +
	"\rPluginService\x12N\n" +
	"\aGetInfo\x12 .gibson.plugin.v1.GetInfoRequest\x1a!.gibson.plugin.v1.GetInfoResponse\x12K\n" +
	"\x06Assess\x12\x1f.gibson.plugin.v1.AssessRequest\x1a .gibson.plugin.v1.AssessResponse\x12U\n" +
	"\fStreamAssess\x12\x1f.gibson.plugin.v1.AssessRequest\x1a .gibson.plugin.v1.AssessResponse(\x010\x01\x12Z\n" +
	"\vBatchAssess\x12$.gibson.plugin.v1.BatchAssessRequest\x1a%.gibson.plugin.v1.BatchAssessResponse\x12Z\n" +
	"\vHealthCheck\x12$.gibson.plugin.v1.HealthCheckRequest\x1a%.gibson.plugin.v1.HealthCheckResponseB>Z<github.com/zero-day-ai/gibson-sdk/pkg/grpc/proto;protob\x06proto3"

var (
	file_pkg_grpc_proto_plugin_proto_rawDescOnce sync.Once
	file_pkg_grpc_proto_plugin_proto_rawDescData []byte
)

func file_pkg_grpc_proto_plugin_proto_rawDescGZIP() []byte {
	file_pkg_grpc_proto_plugin_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_proto_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_grpc_proto_plugin_proto_rawDesc), len(file_pkg_grpc_proto_plugin_proto_rawDesc)))
	})
	return file_pkg_grpc_proto_plugin_proto_rawDescData
}

var file_pkg_grpc_proto_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_pkg_grpc_proto_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_pkg_grpc_proto_plugin_proto_goTypes = []any{
	(SecurityDomain)(0),           // 0: gibson.plugin.v1.SecurityDomain
	(PayloadType)(0),              // 1: gibson.plugin.v1.PayloadType
	(SeverityLevel)(0),            // 2: gibson.plugin.v1.SeverityLevel
	(HealthStatus)(0),             // 3: gibson.plugin.v1.HealthStatus
	(*GetInfoRequest)(nil),        // 4: gibson.plugin.v1.GetInfoRequest
	(*GetInfoResponse)(nil),       // 5: gibson.plugin.v1.GetInfoResponse
	(*PluginInfo)(nil),            // 6: gibson.plugin.v1.PluginInfo
	(*PluginCapabilities)(nil),    // 7: gibson.plugin.v1.PluginCapabilities
	(*AssessRequest)(nil),         // 8: gibson.plugin.v1.AssessRequest
	(*Target)(nil),                // 9: gibson.plugin.v1.Target
	(*Credentials)(nil),           // 10: gibson.plugin.v1.Credentials
	(*AssessmentConfig)(nil),      // 11: gibson.plugin.v1.AssessmentConfig
	(*AssessResponse)(nil),        // 12: gibson.plugin.v1.AssessResponse
	(*Finding)(nil),               // 13: gibson.plugin.v1.Finding
	(*Evidence)(nil),              // 14: gibson.plugin.v1.Evidence
	(*Remediation)(nil),           // 15: gibson.plugin.v1.Remediation
	(*AssessmentMetadata)(nil),    // 16: gibson.plugin.v1.AssessmentMetadata
	(*BatchAssessRequest)(nil),    // 17: gibson.plugin.v1.BatchAssessRequest
	(*BatchConfig)(nil),           // 18: gibson.plugin.v1.BatchConfig
	(*BatchAssessResponse)(nil),   // 19: gibson.plugin.v1.BatchAssessResponse
	(*BatchMetadata)(nil),         // 20: gibson.plugin.v1.BatchMetadata
	(*HealthCheckRequest)(nil),    // 21: gibson.plugin.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),   // 22: gibson.plugin.v1.HealthCheckResponse
	nil,                           // 23: gibson.plugin.v1.PluginInfo.MetadataEntry
	nil,                           // 24: gibson.plugin.v1.AssessRequest.ContextEntry
	nil,                           // 25: gibson.plugin.v1.Target.ConfigurationEntry
	nil,                           // 26: gibson.plugin.v1.Target.MetadataEntry
	nil,                           // 27: gibson.plugin.v1.Credentials.DataEntry
	nil,                           // 28: gibson.plugin.v1.AssessmentConfig.OptionsEntry
	nil,                           // 29: gibson.plugin.v1.Finding.MetadataEntry
	nil,                           // 30: gibson.plugin.v1.Evidence.ContextEntry
	nil,                           // 31: gibson.plugin.v1.AssessmentMetadata.PerformanceMetricsEntry
	nil,                           // 32: gibson.plugin.v1.HealthCheckResponse.DetailsEntry
	(*timestamppb.Timestamp)(nil), // 33: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 34: google.protobuf.Any
}
var file_pkg_grpc_proto_plugin_proto_depIdxs = []int32{
	6,  // 0: gibson.plugin.v1.GetInfoResponse.info:type_name -> gibson.plugin.v1.PluginInfo
	0,  // 1: gibson.plugin.v1.PluginInfo.domain:type_name -> gibson.plugin.v1.SecurityDomain
	7,  // 2: gibson.plugin.v1.PluginInfo.capabilities:type_name -> gibson.plugin.v1.PluginCapabilities
	23, // 3: gibson.plugin.v1.PluginInfo.metadata:type_name -> gibson.plugin.v1.PluginInfo.MetadataEntry
	33, // 4: gibson.plugin.v1.PluginInfo.created_at:type_name -> google.protobuf.Timestamp
	33, // 5: gibson.plugin.v1.PluginInfo.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 6: gibson.plugin.v1.AssessRequest.target:type_name -> gibson.plugin.v1.Target
	11, // 7: gibson.plugin.v1.AssessRequest.config:type_name -> gibson.plugin.v1.AssessmentConfig
	24, // 8: gibson.plugin.v1.AssessRequest.context:type_name -> gibson.plugin.v1.AssessRequest.ContextEntry
	33, // 9: gibson.plugin.v1.AssessRequest.timestamp:type_name -> google.protobuf.Timestamp
	25, // 10: gibson.plugin.v1.Target.configuration:type_name -> gibson.plugin.v1.Target.ConfigurationEntry
	10, // 11: gibson.plugin.v1.Target.credentials:type_name -> gibson.plugin.v1.Credentials
	26, // 12: gibson.plugin.v1.Target.metadata:type_name -> gibson.plugin.v1.Target.MetadataEntry
	27, // 13: gibson.plugin.v1.Credentials.data:type_name -> gibson.plugin.v1.Credentials.DataEntry
	0,  // 14: gibson.plugin.v1.AssessmentConfig.domain:type_name -> gibson.plugin.v1.SecurityDomain
	1,  // 15: gibson.plugin.v1.AssessmentConfig.payload_types:type_name -> gibson.plugin.v1.PayloadType
	28, // 16: gibson.plugin.v1.AssessmentConfig.options:type_name -> gibson.plugin.v1.AssessmentConfig.OptionsEntry
	13, // 17: gibson.plugin.v1.AssessResponse.findings:type_name -> gibson.plugin.v1.Finding
	16, // 18: gibson.plugin.v1.AssessResponse.metadata:type_name -> gibson.plugin.v1.AssessmentMetadata
	33, // 19: gibson.plugin.v1.AssessResponse.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 20: gibson.plugin.v1.Finding.severity:type_name -> gibson.plugin.v1.SeverityLevel
	0,  // 21: gibson.plugin.v1.Finding.domain:type_name -> gibson.plugin.v1.SecurityDomain
	1,  // 22: gibson.plugin.v1.Finding.payload_type:type_name -> gibson.plugin.v1.PayloadType
	14, // 23: gibson.plugin.v1.Finding.evidence:type_name -> gibson.plugin.v1.Evidence
	15, // 24: gibson.plugin.v1.Finding.remediation:type_name -> gibson.plugin.v1.Remediation
	29, // 25: gibson.plugin.v1.Finding.metadata:type_name -> gibson.plugin.v1.Finding.MetadataEntry
	33, // 26: gibson.plugin.v1.Finding.discovered_at:type_name -> google.protobuf.Timestamp
	30, // 27: gibson.plugin.v1.Evidence.context:type_name -> gibson.plugin.v1.Evidence.ContextEntry
	33, // 28: gibson.plugin.v1.AssessmentMetadata.started_at:type_name -> google.protobuf.Timestamp
	33, // 29: gibson.plugin.v1.AssessmentMetadata.completed_at:type_name -> google.protobuf.Timestamp
	31, // 30: gibson.plugin.v1.AssessmentMetadata.performance_metrics:type_name -> gibson.plugin.v1.AssessmentMetadata.PerformanceMetricsEntry
	8,  // 31: gibson.plugin.v1.BatchAssessRequest.requests:type_name -> gibson.plugin.v1.AssessRequest
	18, // 32: gibson.plugin.v1.BatchAssessRequest.config:type_name -> gibson.plugin.v1.BatchConfig
	12, // 33: gibson.plugin.v1.BatchAssessResponse.responses:type_name -> gibson.plugin.v1.AssessResponse
	20, // 34: gibson.plugin.v1.BatchAssessResponse.metadata:type_name -> gibson.plugin.v1.BatchMetadata
	33, // 35: gibson.plugin.v1.BatchMetadata.started_at:type_name -> google.protobuf.Timestamp
	33, // 36: gibson.plugin.v1.BatchMetadata.completed_at:type_name -> google.protobuf.Timestamp
	3,  // 37: gibson.plugin.v1.HealthCheckResponse.status:type_name -> gibson.plugin.v1.HealthStatus
	32, // 38: gibson.plugin.v1.HealthCheckResponse.details:type_name -> gibson.plugin.v1.HealthCheckResponse.DetailsEntry
	34, // 39: gibson.plugin.v1.AssessmentConfig.OptionsEntry.value:type_name -> google.protobuf.Any
	4,  // 40: gibson.plugin.v1.PluginService.GetInfo:input_type -> gibson.plugin.v1.GetInfoRequest
	8,  // 41: gibson.plugin.v1.PluginService.Assess:input_type -> gibson.plugin.v1.AssessRequest
	8,  // 42: gibson.plugin.v1.PluginService.StreamAssess:input_type -> gibson.plugin.v1.AssessRequest
	17, // 43: gibson.plugin.v1.PluginService.BatchAssess:input_type -> gibson.plugin.v1.BatchAssessRequest
	21, // 44: gibson.plugin.v1.PluginService.HealthCheck:input_type -> gibson.plugin.v1.HealthCheckRequest
	5,  // 45: gibson.plugin.v1.PluginService.GetInfo:output_type -> gibson.plugin.v1.GetInfoResponse
	12, // 46: gibson.plugin.v1.PluginService.Assess:output_type -> gibson.plugin.v1.AssessResponse
	12, // 47: gibson.plugin.v1.PluginService.StreamAssess:output_type -> gibson.plugin.v1.AssessResponse
	19, // 48: gibson.plugin.v1.PluginService.BatchAssess:output_type -> gibson.plugin.v1.BatchAssessResponse
	22, // 49: gibson.plugin.v1.PluginService.HealthCheck:output_type -> gibson.plugin.v1.HealthCheckResponse
	45, // [45:50] is the sub-list for method output_type
	40, // [40:45] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_pkg_grpc_proto_plugin_proto_init() }
func file_pkg_grpc_proto_plugin_proto_init() {
	if File_pkg_grpc_proto_plugin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_grpc_proto_plugin_proto_rawDesc), len(file_pkg_grpc_proto_plugin_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpc_proto_plugin_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_proto_plugin_proto_depIdxs,
		EnumInfos:         file_pkg_grpc_proto_plugin_proto_enumTypes,
		MessageInfos:      file_pkg_grpc_proto_plugin_proto_msgTypes,
	}.Build()
	File_pkg_grpc_proto_plugin_proto = out.File
	file_pkg_grpc_proto_plugin_proto_goTypes = nil
	file_pkg_grpc_proto_plugin_proto_depIdxs = nil
}
